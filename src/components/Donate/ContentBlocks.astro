---
import { Image } from "astro:assets";
import "./contentBlocks.scss";
import Headline from "../shared/Headline.astro";
import Button from "../shared/Button.astro";
---

<div id="content-blocks-section" class="donate-content-blocks">
  <div class="donate-content-blocks-wrapper">
    {
      Astro.props.data.blocks.map((block, index) => {
        const reversed = (index + 1) % 2 === 0;
        return (
          <div
            class={`donate-content-blocks-block${reversed ? " donate-content-blocks-block-reversed" : ""}`}
          >
            <div class="donate-content-blocks-block-image">
              <div>
                <Image
                  src={block.image.sourceUrl}
                  alt={block.image.altText}
                  inferSize={true}
                />
              </div>
            </div>
            <div class="donate-content-blocks-block-info">
              <div class="donate-content-blocks-block-info-inner">
                <div>
                  <Headline ele="h2" hlstyle="one">
                    {block.title}
                  </Headline>
                  <Headline ele="h3" hlstyle="two">
                    {block.subTitle}
                  </Headline>
                </div>
                <div set:html={block.content} />
                <div>
                  <Button href={block.buttonLink}>{block.buttonText}</Button>
                </div>
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const triggerContainer = document.querySelector("#content-blocks-section");
  const setps = document.querySelectorAll(".donate-content-blocks-block");

  if (triggerContainer && setps) {
    gsap.fromTo(
      setps,
      { autoAlpha: 0, y: 200 },
      {
        duration: 1,
        autoAlpha: 1,
        y: 0,
        ease: "power2.out",
        scrollTrigger: {
          start: "top 30%",
          markers: false,
          trigger: triggerContainer,
        },
        stagger: {
          each: 0.25,
        },
      },
    );
  }
</script>
